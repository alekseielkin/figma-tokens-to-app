let getTokens,camelCase,rgbaGenObject,fullColorHex;_b5a‍.x([["default",()=>_b5a‍.o]]);_b5a‍.w("../utils",[["getTokens",["getTokens"],function(v){getTokens=v}],["camelCase",["camelCase"],function(v){camelCase=v}],["rgbaGenObject",["rgbaGenObject"],function(v){rgbaGenObject=v}],["fullColorHex",["fullColorHex"],function(v){fullColorHex=v}]]);

const getColors = (layerName, stylesArtboard) => {
  const palette = {color: {}}
  const decorator = element => {
    const {name} = element
    const {r, g, b, a} = element.children[0].fills[0].color
    const colorRGBA = rgbaGenObject(r, g, b, a)
    const tokens = {
      [camelCase(name)]: {
        value: `${fullColorHex(colorRGBA.r, colorRGBA.g, colorRGBA.b)}`
      }
    }
    Object.assign(palette.color, tokens)
  }

  return getTokens(layerName, stylesArtboard, palette, decorator)
}

_b5a‍.d(getColors);
